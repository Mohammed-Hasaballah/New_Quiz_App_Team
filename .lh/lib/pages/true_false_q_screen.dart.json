{
    "sourceFile": "lib/pages/true_false_q_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1687439050010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1687439050010,
            "name": "Commit-0",
            "content": "import 'dart:async';\r\n\r\nimport 'package:flutter/material.dart';\r\n\r\nimport '../constants.dart';\r\nimport '../modules/true_false/quizBrain.dart';\r\nimport '../widgets/my_outline_btn.dart';\r\nimport 'home.dart';\r\n\r\nclass TrueFalseQuiz extends StatefulWidget {\r\n  @override\r\n  _TrueFalseQuizState createState() => _TrueFalseQuizState();\r\n}\r\n\r\nclass _TrueFalseQuizState extends State<TrueFalseQuiz> {\r\n  QuizBrain quizBrain = QuizBrain();\r\n\r\n  List<Icon> scoreKeeper = [];\r\n\r\n  int? _choice;\r\n\r\n  int counter = 10;\r\n\r\n  void checkAnswer(bool userChoice) {\r\n    bool correctAnswer = quizBrain.getQuestionAnswer();\r\n    setState(() {\r\n      if (correctAnswer == userChoice) {\r\n        scoreKeeper.add(\r\n          Icon(\r\n            Icons.check,\r\n            color: Colors.green,\r\n          ),\r\n        );\r\n      } else {\r\n        scoreKeeper.add(\r\n          Icon(\r\n            Icons.close,\r\n            color: Colors.red,\r\n          ),\r\n        );\r\n      }\r\n    });\r\n\r\n    if (quizBrain.isFinished()) {\r\n      print('finished');\r\n\r\n      Timer(Duration(seconds: 1), () {\r\n        // Alert(context: context, title: \"Finished\", desc: \"you are done\").show();\r\n        setState(() {\r\n          quizBrain.reset();\r\n          scoreKeeper.clear();\r\n        });\r\n      });\r\n    } else {\r\n      quizBrain.nextQuestion();\r\n    }\r\n  }\r\n\r\n  @override\r\n  void initState() {\r\n    Timer.periodic(Duration(seconds: 1), (timer) {\r\n      setState(() {\r\n        counter--;\r\n      });\r\n      if (counter == 0) {\r\n        // timer.cancel();\r\n        counter = 10;\r\n        quizBrain.nextQuestion();\r\n      }\r\n      ;\r\n    });\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  void dispose() {\r\n    super.dispose();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      body: Container(\r\n        decoration: BoxDecoration(\r\n          gradient: LinearGradient(\r\n            colors: [\r\n              kBlueBg,\r\n              kL2,\r\n            ],\r\n            begin: Alignment.topCenter,\r\n            end: Alignment.bottomCenter,\r\n          ),\r\n        ),\r\n        child: Padding(\r\n          padding: const EdgeInsets.only(top: 74, left: 24, right: 24),\r\n          child: Column(\r\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n            crossAxisAlignment: CrossAxisAlignment.stretch,\r\n            children: <Widget>[\r\n              Row(\r\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                children: [\r\n                  SizedBox(\r\n                    height: 44,\r\n                    width: 44,\r\n                    child: MYOutlineBtn(\r\n                      icon: Icons.close,\r\n                      iconColor: Colors.white,\r\n                      bColor: Colors.white,\r\n                      function: () {\r\n                        // Navigator.pop(context);\r\n                        // Navigator.pop(context);\r\n\r\n                        Navigator.pushAndRemoveUntil(\r\n                          context,\r\n                          MaterialPageRoute(\r\n                            builder: (context) => HomePage(),\r\n                          ),\r\n                          (route) => false,\r\n                        );\r\n                      },\r\n                    ),\r\n                  ),\r\n                  Stack(\r\n                    alignment: Alignment.center,\r\n                    children: [\r\n                      SizedBox(\r\n                        height: 56,\r\n                        width: 56,\r\n                        child: CircularProgressIndicator(\r\n                          value: counter / 10,\r\n                          color: Colors.white,\r\n                          backgroundColor: Colors.white12,\r\n                        ),\r\n                      ),\r\n                      Text(\r\n                        counter.toString(),\r\n                        style: TextStyle(\r\n                          fontFamily: 'Sf-Pro-Text',\r\n                          fontSize: 24,\r\n                          color: Colors.white,\r\n                          fontWeight: FontWeight.bold,\r\n                        ),\r\n                      )\r\n                    ],\r\n                  ),\r\n                  OutlinedButton(\r\n                    onPressed: () {},\r\n                    child: Icon(\r\n                      Icons.favorite,\r\n                      color: Colors.white,\r\n                    ),\r\n                    style: OutlinedButton.styleFrom(\r\n                        shape: RoundedRectangleBorder(\r\n                          borderRadius: BorderRadius.circular(25),\r\n                        ),\r\n                        side: BorderSide(color: Colors.white)),\r\n                  )\r\n                ],\r\n              ),\r\n              Expanded(\r\n                flex: 5,\r\n                child: Padding(\r\n                  padding: EdgeInsets.all(10.0),\r\n                  child: Center(\r\n                    child: Text(\r\n                      quizBrain.getQuestionText(),\r\n                      textAlign: TextAlign.center,\r\n                      style: TextStyle(\r\n                        fontSize: 25.0,\r\n                        color: Colors.white,\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n              Expanded(\r\n                child: Padding(\r\n                  padding: EdgeInsets.all(15.0),\r\n                  child: ElevatedButton(\r\n                    style: ButtonStyle(\r\n                      backgroundColor: MaterialStatePropertyAll(Colors.green),\r\n                    ),\r\n                    child: Text(\r\n                      'True',\r\n                      style: TextStyle(\r\n                        color: Colors.white,\r\n                        fontSize: 20.0,\r\n                      ),\r\n                    ),\r\n                    onPressed: () {\r\n                      //The user picked true.\r\n                      checkAnswer(true);\r\n                    },\r\n                  ),\r\n                ),\r\n              ),\r\n              Expanded(\r\n                child: Padding(\r\n                  padding: EdgeInsets.all(15.0),\r\n                  child: ElevatedButton(\r\n                    style: ButtonStyle().copyWith(\r\n                      backgroundColor: MaterialStatePropertyAll(Colors.red),\r\n                    ),\r\n                    child: Text(\r\n                      'False',\r\n                      style: TextStyle(\r\n                        fontSize: 20.0,\r\n                        color: Colors.white,\r\n                      ),\r\n                    ),\r\n                    onPressed: () {\r\n                      //The user picked false.\r\n                      checkAnswer(false);\r\n                    },\r\n                  ),\r\n                ),\r\n              ),\r\n              Wrap(\r\n                children: scoreKeeper,\r\n              ),\r\n              SizedBox(\r\n                height: 72,\r\n              )\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}